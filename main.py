import telebot
import requests
import os
from googletrans import Translator
from datetime import datetime
from babel.dates import format_date, format_time
from dotenv import load_dotenv
from telebot.types import KeyboardButton

load_dotenv(dotenv_path='tokens.env')

API_TOKEN = os.getenv('TEST')
WEATHER_API_KEY = os.getenv('WEATHER_API_KEY')

bot = telebot.TeleBot(API_TOKEN)
translator = Translator()

selected_city = ""
user_steps = {}

city_translation = {
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ú—ñ–Ω—Å–∫—É": ("Minsk", "–ú—ñ–Ω—Å–∫—É"),
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ë—Ä—ç—Å—Ü–µ": ("Brest", "–ë—Ä—ç—Å—Ü–µ"),
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ì–æ–º–µ–ª–µ": ("Gomel", "–ì–æ–º–µ–ª–µ"),
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ì—Ä–æ–¥–Ω–æ": ("Grodno", "–ì—Ä–æ–¥–Ω–æ"),
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –í—ñ—Ü–µ–±—Å–∫–µ": ("Vitebsk", "–í—ñ—Ü–µ–±—Å–∫–µ"),
    "–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ú–∞–≥—ñ–ª—ë–≤–µ": ("Mogilev", "–ú–∞–≥—ñ–ª—ë–≤–µ")
}

def get_weather(city):
    try:
        url = f'http://api.weatherapi.com/v1/current.json?key={WEATHER_API_KEY}&q={city}&lang=ru'
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()

        if 'error' in data:
            return "–ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∞—Ç—Ä—ã–º–∞–Ω–Ω—ñ –¥–∞–¥–∑–µ–Ω—ã—Ö –∞–± –Ω–∞–¥–≤–æ—Ä'—ñ."

        temp = data['current']['temp_c']
        weather = data['current']['condition']['text']
        wind = data['current']['wind_kph']

        try:
            translated = translator.translate(weather, src='ru', dest='be')
            translated_text = translated.text
        except Exception:
            translated_text = weather

        now = datetime.now()
        formatted_date = format_date(now, locale='be')
        formatted_time = format_time(now, locale='be')

        return f"üìÜC—ë–Ω–Ω—è: {formatted_date}\n‚è∞–ß–∞—Å: {formatted_time}\n\nüå•–ù–∞–¥–≤–æ—Ä'–µ —û {city}üå•\nüå°–¢—ç–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚ú®–°—Ç–∞–Ω: {translated_text}\nüå¨–í–µ—Ü–µ—Ä: {wind} –∫–º/–≥"
    except requests.exceptions.RequestException as e:
        return f"–ù–µ–º–∞–≥—á—ã–º–∞ –∞—Ç—Ä—ã–º–∞—Ü—å –¥–∞–¥–∑–µ–Ω—ã—è: {e}"
    except Exception as e:
        return f"–ù–µ—á–∞–∫–∞–Ω–∞—è –ø–∞–º—ã–ª–∫–∞: {e}"

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    country_button = KeyboardButton('üåç–í—ã–±–µ—Ä—ã—Ü–µ –∫—Ä–∞—ñ–Ω—Éüåç')
    settings = KeyboardButton('‚öôÔ∏è–ù–∞–ª–∞–¥–∫—ñ‚öôÔ∏è')
    markup.add(country_button, settings)
    bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –ù–∞—Ü—ñ—Å–Ω—ñ—Ü–µ –∫–Ω–æ–ø–∫—É, –∫–∞–± –≤—ã–±—Ä–∞—Ü—å –∫—Ä–∞—ñ–Ω—É.",
                     reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '‚öôÔ∏è–ù–∞–ª–∞–¥–∫—ñ‚öôÔ∏è')
def settings(message):
    bot.reply_to(message, '–£ –±—É–¥—É—á—ã–Ω–Ω—ñ')


@bot.message_handler(func=lambda message: message.text == 'üåç–í—ã–±–µ—Ä—ã—Ü–µ –∫—Ä–∞—ñ–Ω—Éüåç')
def choose_country(message):
    markup = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    belarus_button = KeyboardButton('–ë–µ–ª–∞—Ä—É—Å—åüáßüáæ')
    back_button = KeyboardButton('–í—è—Ä–Ω—É—Ü—Ü–∞‚¨ÖÔ∏è')
    markup.add(belarus_button, back_button)
    bot.send_message(message.chat.id, "–í—ã–ª—É—á—ã—Ü–µ –∫—Ä–∞—ñ–Ω—É:", reply_markup=markup)



@bot.message_handler(func=lambda message: message.text == '–ë–µ–ª–∞—Ä—É—Å—åüáßüáæ')
def send_weather(message):
    markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    minsk = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ú—ñ–Ω—Å–∫—É')
    brest = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ë—Ä—ç—Å—Ü–µ')
    gomel = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ì–æ–º–µ–ª–µ')
    grodno = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ì—Ä–æ–¥–Ω–æ')
    vitebsk = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –í—ñ—Ü–µ–±—Å–∫–µ')
    mogilev = KeyboardButton('–ù–∞–¥–≤–æ—Ä‚Äô–µ —û –ú–∞–≥—ñ–ª—ë–≤–µ')
    back_button = KeyboardButton('–í—è—Ä–Ω—É—Ü—Ü–∞‚¨ÖÔ∏è')
    markup.add(minsk, brest, gomel, grodno, vitebsk, mogilev, back_button)
    bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –ù–∞—Ü—ñ—Å–Ω—ñ—Ü–µ –∫–Ω–æ–ø–∫—É, –∫–∞–± –∞—Ç—Ä—ã–º–∞—Ü—å –Ω–∞–¥–≤–æ—Ä'–µ —û –ú—ñ–Ω—Å–∫—É.",
                     reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–í—è—Ä–Ω—É—Ü—Ü–∞‚¨ÖÔ∏è')
def go_back(message):
    step = user_steps.get(message.chat.id, 'start')
    if step == 'choose_city':
        choose_country(message)  
    elif step == 'choose_country':
        send_welcome(message) 
    else:
        send_welcome(message) 

@bot.message_handler(func=lambda message: message.text in city_translation)
def send_weather(message):
    global selected_city

    selected_city, city_belarusian = city_translation[message.text]
    weather_info = get_weather(selected_city)

    bot.reply_to(message, weather_info.replace(f"üå•–ù–∞–¥–≤–æ—Ä'–µ —û {selected_city}üå•", f"üå•–ù–∞–¥–≤–æ—Ä'–µ —û {city_belarusian}üå•"))

bot.polling()
